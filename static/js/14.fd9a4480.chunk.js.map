{"version":3,"sources":["components/Z-Chat/WhiteMSG.jsx","components/Z-Chat/BlueMSG.jsx","components/Z-Chat/Input.jsx","components/Z-Chat/Chat.jsx"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","Inner","_templateObject2","WhiteMessage","_ref","children","_jsx","BlueMessage","Label","_templateObject3","Inp","input","_templateObject4","UnderText","_templateObject5","Input","red","label","placeholder","underText","_Fragment","_jsxs","parseString","require","Button","chat","p","open","css","InnerWrapper","chatPosition","Window","_templateObject6","_templateObject7","_templateObject8","ChatBody","_templateObject9","ChatWrapper","_templateObject0","HeaderWrapper","_templateObject1","CloseIcon","_templateObject10","Header","_templateObject11","HeaderImg","_templateObject12","BrainBot","Form","form","_templateObject13","connect","state","isChatOpen","props","formInput","setInput","useState","setChat","buttonAnimation","setButtonAnimation","clientHeight","setClientHeight","footerHeight","setFooterHeight","HandleClick","store","dispatch","chatClose","chatOpen","toBottom","wrapper","document","getElementById","scrollHeight","scrollTop","useEffect","timeout","setTimeout","clearTimeout","documentElement","id","alt","onClick","SectionHeader","map","user","text","onSubmit","e","preventDefault","prevState","axios","get","concat","then","r","data","err","result","response","message","reset","Submit","onChange","target","value","handleChange"],"mappings":"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","file":"static/js/14.fd9a4480.chunk.js","sourcesContent":["\r\nimport styled from 'styled-components'\r\n\r\nconst Wrapper = styled.div`\r\njustify-content:flex-start;\r\nborder-radius:20px;\r\ntext-align:center;\r\ndisplay:flex;\r\n`\r\nconst Inner = styled.div`\r\nfont-weight:bold;\r\nborder-radius:20px;\r\ncolor:#2E2E2E;\r\nfont-size:13px;\r\npadding:5px;\r\nbackground-color:#EDECEE;\r\nmax-width:80%;\r\nmargin:5px auto 0px 5px;\r\n`\r\nfunction WhiteMessage({children}){\r\nreturn(\r\n<Wrapper>\r\n    <Inner>\r\n    {children}\r\n    </Inner>\r\n</Wrapper>\r\n\r\n)\r\n}\r\nexport default WhiteMessage","import styled from 'styled-components'\r\nimport React from 'react'\r\nconst Wrapper = styled.div`\r\ndisplay:flex;\r\njustify-content:flex-end;\r\n`\r\nconst Inner = styled.div`\r\nfont-weight:bold;\r\ntext-align:center;\r\nborder-radius:20px;\r\ncolor:#fff;\r\nfont-size:13px;\r\npadding:5px;\r\nbackground-color:rgba(1, 87, 155, 1);\r\nmax-width:80%;\r\nmargin:5px 5px 0px auto;\r\n`\r\nfunction BlueMessage({children}){\r\nreturn(\r\n<Wrapper>\r\n    <Inner>\r\n    {children}\r\n    </Inner>\r\n</Wrapper>\r\n)\r\n}\r\nexport default BlueMessage","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Wrapper = styled.div`\r\nwidth:250px;\r\nheight:60px;\r\nmargin:auto;\r\n/* border-radius:0 0 0 5px; */\r\n`\r\nconst Inner = styled.div`\r\nbackground-color:rgba(33, 33, 33, 0.08);\r\nborder-radius: 4px 4px 0px 0px;\r\nheight:60px;\r\npadding: 15px 0px 0px 16px;\r\n/* border-bottom:1px solid rgba(1, 87, 155, 1); */\r\n`\r\nconst Label = styled.div`\r\nmargin-left:3px;\r\ncolor:rgba(1, 87, 155, 1);\r\nfont-size:14px;\r\n`\r\nconst Inp = styled.input`\r\nmargin-left:0px;\r\nwidth:231px;\r\nheight:24px;\r\noutline: none;\r\nborder:none;\r\nbackground-color:rgba(33, 33, 33, 0.00);\r\n`\r\nconst UnderText = styled.div`\r\ncolor:rgba(1, 87, 155, 1);\r\nfont-size:8px;\r\nmargin: 3px 0px 0px 16px;\r\n`\r\n\r\nexport default function Input({red, label, placeholder, underText, }) {\r\n    return (\r\n        <>\r\n            <Wrapper>\r\n                <Inner>\r\n                    <Label>{label}</Label>\r\n                    <Inp placeholder={placeholder}></Inp>\r\n                </Inner>\r\n               {red?<UnderText>{underText}</UnderText>:null} \r\n            </Wrapper>\r\n        </>\r\n    )\r\n} ","import { chatOpen, chatClose } from 'actions/isChatOpen.actions'\r\nimport { SectionHeader } from 'components/common/typography'\r\nimport { isChatOpen } from 'selectors/isChatOpen.selector'\r\nimport React, { useState, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { BrainBot, chat } from 'img'\r\nimport { store } from 'configureStore'\r\nimport { connect } from 'react-redux'\r\nimport WhiteMessage from './WhiteMSG'\r\nimport BlueMessage from './BlueMSG'\r\nimport Input from './Input.jsx'\r\nimport axios from 'axios'\r\n\r\nconst parseString = require('xml2js').parseString\r\n\r\nconst Button = styled.div`\r\n  background-image: url(${chat});\r\n  background-size: cover; \r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  height:50px;\r\n  width:60px;\r\n  padding:0px;\r\n  margin-top:300px;\r\n  ${p=> p.open ? css`display:none;`:css``}\r\n`\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  padding-top:0px;\r\n  height:100%;\r\n  top: 0px;\r\n  right:20px;\r\n  @media (max-width: 1000px) {\r\n    display: none;\r\n  }\r\n  z-index:2000;\r\n`\r\n\r\nconst InnerWrapper = styled.div`\r\n  display: flex;\r\n  position: sticky;\r\n  top: ${p=>p.chatPosition}px;\r\n`\r\n\r\nconst Window = styled.div`\r\n  ${(p) =>\r\n    p.open\r\n      ? css`\r\n          transition:display 0.4s;\r\n          display: flex;\r\n        `\r\n      : css`\r\n          display: none;\r\n        `};\r\n  flex-direction: column;\r\n  width: 250px;\r\n  height: 361px;\r\n  position: relative;\r\n  border:1px solid #17293f40;\r\n  border-radius: 5px 5px 0px 0px;\r\n`\r\nconst ChatBody = styled.div`\r\n  background-color: white;\r\n`\r\nconst ChatWrapper = styled.div`\r\n  overflow-y: auto;\r\n  height: 242px;\r\n  width: 100%;\r\n`\r\n//header\r\nconst HeaderWrapper = styled.div`\r\n  border-bottom:1px solid #17293f40;\r\n  border-radius: 5px 5px 0px 0px;\r\n  background-color: #fff;\r\n  display: flex;\r\n  height:60px;\r\n`\r\nconst CloseIcon = styled.div`\r\n  margin: 6px 0px 0px 6px;\r\n  font-size:20px;\r\n  font-weight:bold;\r\n  cursor:pointer;\r\n`\r\nconst Header = styled.div`\r\n  border-radius: 5px 0px 0px 5px;\r\n  width: 109px;\r\n  height: 30px;\r\n  padding: 3px 5px;\r\n  margin: auto 0px auto 35px;\r\n`\r\nconst HeaderImg = styled.div`\r\n  margin:auto 0px; \r\n  z-index: 100;\r\n  height: 50px;\r\n  width: 50px;\r\n  background-image: url(${BrainBot});\r\n`\r\n// <- header\r\n\r\nconst Form = styled.form`\r\n  height:60px;\r\n`\r\n\r\nfunction Chat(props) {\r\n\r\n  const [formInput, setInput] = useState('')\r\n  const [chat, setChat] = useState([])\r\n  const [buttonAnimation, setButtonAnimation] = useState(false)\r\n  const [clientHeight, setClientHeight] = useState(0)\r\n  const [footerHeight, setFooterHeight] = useState(90)\r\n \r\n  useEffect(() => {\r\n  /**\r\n   * @timeout\r\n   * applies animation to the chat button\r\n  */\r\n    const timeout = setTimeout(() => {\r\n      setButtonAnimation((p) => !p)\r\n    }, 500);\r\n    return () => clearTimeout(timeout)\r\n  }, [buttonAnimation]);\r\n\r\n  useEffect(()=>{\r\n    /**\r\n     * adds heights of the viewport and footer height to the state for the chat\r\n     */\r\n    setClientHeight(document.documentElement.clientHeight);\r\n    setFooterHeight(document.getElementById('FooterWrapper').clientHeight)\r\n\r\n  },[clientHeight, footerHeight])\r\n\r\n  function HandleClick() {\r\n    if(props.isChatOpen){\r\n      store.dispatch(chatClose())\r\n    }else{\r\n      store.dispatch(chatOpen())\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @toBottom\r\n   * scrolls down chat while user chats therefore keeps last message of the chat in the viewport\r\n   */\r\n  function toBottom() {\r\n    const wrapper = document.getElementById('chatWrapper')\r\n    if (wrapper.scrollHeight !== null) {\r\n      return (wrapper.scrollTop = wrapper.scrollHeight - wrapper.clientHeight)\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n\r\n  function Submit(e) {\r\n    e.preventDefault()\r\n    setChat((prevState) => {\r\n      return [\r\n        ...prevState,\r\n        {\r\n          user: true,\r\n          text: formInput,\r\n        },\r\n      ]\r\n    })\r\n\r\n    axios\r\n      .get(\r\n        `https://www.botlibre.com/rest/api/form-chat?&application=4120366723131427615&instance=165&message=${formInput}`,\r\n      )\r\n      .then((r) => {\r\n        parseString(r.data, (err, result) => {\r\n          setChat((prevState) => {\r\n            return [\r\n              ...prevState,\r\n              {\r\n                user: false,\r\n                text: result.response.message[0],\r\n              },\r\n            ]\r\n          })\r\n        })\r\n        toBottom()\r\n      })\r\n    document.getElementById('field').reset()\r\n    toBottom()\r\n  }\r\n\r\n  function handleChange(e) {\r\n    setInput(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Wrapper \r\n      id='chat' \r\n      open={props.isChatOpen} \r\n    >\r\n      <InnerWrapper \r\n        id='chatInnerWrapper' \r\n        open={props.open}\r\n        chatPosition={clientHeight - 360 - (footerHeight - 2)}\r\n      >\r\n        <Button alt='chat icon' open={props.isChatOpen} onClick={HandleClick}> </Button>\r\n        <Window open={props.isChatOpen} id='chatWindow'>\r\n          <HeaderWrapper>\r\n            <CloseIcon onClick={HandleClick}>X</CloseIcon>\r\n            <Header>\r\n              <SectionHeader>Brain Bot</SectionHeader>\r\n            </Header>\r\n            <HeaderImg></HeaderImg>\r\n          </HeaderWrapper>\r\n          <ChatBody>\r\n            <ChatWrapper id=\"chatWrapper\">\r\n              {chat.map((p) => {\r\n                return p.user ? (\r\n                  <WhiteMessage>{p.text}</WhiteMessage>\r\n                ) : (\r\n                  <BlueMessage>{p.text}</BlueMessage>\r\n                )\r\n              })}\r\n            </ChatWrapper>\r\n            <Form\r\n              id=\"field\"\r\n              onSubmit={(e) => {\r\n                Submit(e)\r\n              }}\r\n              onChange={(e) => handleChange(e)}\r\n            >\r\n              <Input\r\n                label=\"Chat\"\r\n                placeholder=\"Input text\"\r\n                underText=\"Type in whatever you like\"\r\n              ></Input>\r\n            </Form>\r\n          </ChatBody>\r\n        </Window>\r\n      </InnerWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isChatOpen:isChatOpen(state)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Chat)"],"sourceRoot":""}